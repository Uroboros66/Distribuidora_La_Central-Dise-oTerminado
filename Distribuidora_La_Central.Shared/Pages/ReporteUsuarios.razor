@page "/reporte-usuarios"
@inject HttpClient Http
@using Distribuidora_La_Central.Shared.Models

<style>
    /* Estilos generales */
    .usuarios-container {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        max-width: 100%;
        margin: 0 auto;
        padding: 20px;
        background-color: #f8f9fa;
    }

    /* Encabezado */
    .usuarios-header {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 2px solid #0d6efd;
    }

    .usuarios-title {
        color: #0d6efd;
        font-size: 1.8rem;
        font-weight: 600;
        margin: 0;
    }

    /* Barra de búsqueda */
    .search-usuarios-container {
        width: 100%;
        margin-bottom: 15px;
    }

    .search-usuarios-input {
        width: 100%;
        padding: 10px 15px;
        border: 1px solid #ced4da;
        border-radius: 4px;
        font-size: 1rem;
        transition: border-color 0.3s, box-shadow 0.3s;
    }

        .search-usuarios-input:focus {
            border-color: #86b7fe;
            outline: 0;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }

    /* Botón de descarga */
    .download-usuarios-button {
        background-color: #0d6efd;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 4px;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.3s;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

        .download-usuarios-button:hover {
            background-color: #0b5ed7;
            transform: translateY(-2px);
        }

    /* Tabla */
    .usuarios-table-container {
        overflow-x: auto;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-top: 15px;
    }

    .usuarios-table {
        width: 100%;
        border-collapse: collapse;
        min-width: 600px;
    }

        .usuarios-table thead {
            background-color: #0d6efd;
            color: white;
        }

        .usuarios-table th {
            padding: 12px 15px;
            text-align: left;
            font-weight: 600;
        }

        .usuarios-table td {
            padding: 10px 15px;
            border-bottom: 1px solid #dee2e6;
        }

        .usuarios-table tr:nth-child(even) {
            background-color: #f8f9fa;
        }

        .usuarios-table tr:hover {
            background-color: #e9ecef;
        }

    /* Estilos para roles */
    .rol-admin {
        color: #0d6efd;
        font-weight: 600;
    }

    .rol-user {
        color: #198754;
        font-weight: 500;
    }

    .rol-guest {
        color: #6c757d;
        font-weight: 500;
    }

    /* Mensajes */
    .loading-usuarios-message, .no-usuarios-message {
        text-align: center;
        padding: 30px;
        color: #6c757d;
        font-size: 1.1rem;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    /* Responsive para móviles */
    @@media (max-width: 768px) {
        .usuarios-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 15px;
        }

        .usuarios-title {
            font-size: 1.5rem;
        }

        .download-usuarios-button {
            width: 100%;
            justify-content: center;
        }

        .usuarios-table th, .usuarios-table td {
            padding: 8px 10px;
            font-size: 0.9rem;
        }
    }

    @@media (max-width: 480px) {
        .usuarios-container {
            padding: 15px;
        }

        .usuarios-table th, .usuarios-table td {
            padding: 6px 8px;
            font-size: 0.85rem;
        }
    }
</style>

<div class="usuarios-container">
    <div class="usuarios-header">
        <h3 class="usuarios-title">Reporte de Usuarios</h3>
    </div>

    <div class="search-usuarios-container">
        <input @bind="filtro" placeholder="Buscar..." class="search-usuarios-input" />
    </div>

    <button class="download-usuarios-button" @onclick="DescargarPdf">
        <i class="fas fa-file-pdf"></i> Descargar PDF
    </button>

    @if (itemsFiltrados == null)
    {
        <p class="loading-usuarios-message">Cargando datos...</p>
    }
    else if (itemsFiltrados.Count == 0)
    {
        <p class="no-usuarios-message">No se encontraron datos.</p>
    }
    else
    {
        <div class="usuarios-table-container">
            <table class="usuarios-table">
                <thead>
                    <tr>
                        @foreach (var prop in typeof(Usuario).GetProperties())
                        {
                            <th>@prop.Name</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in itemsFiltrados)
                    {
                        <tr>
                            @foreach (var prop in typeof(Usuario).GetProperties())
                            {
                                <td class="@((prop.Name == "rol") ?
                                    (item.rol == "Admin" ? "rol-admin" :
                                     item.rol == "User" ? "rol-user" : "rol-guest") : "")">
                                    @prop.GetValue(item)
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    private List<Usuario> items = new();
    private string filtro = "";

    protected override async Task OnInitializedAsync()
    {
        items = await Http.GetFromJsonAsync<List<Usuario>>("api/Usuario/obtener-todos");
    }

    private List<Usuario> itemsFiltrados =>
    string.IsNullOrWhiteSpace(filtro)
    ? items
    : items.Where(x => x.idUsuario.ToString().Contains(filtro, StringComparison.OrdinalIgnoreCase) ||
                      x.nombre.Contains(filtro, StringComparison.OrdinalIgnoreCase) ||
                      x.rol.Contains(filtro, StringComparison.OrdinalIgnoreCase) ||
                      x.codigoAcceso.Contains(filtro, StringComparison.OrdinalIgnoreCase)).ToList();

    private async Task DescargarPdf()
    {
        var url = Navigation.ToAbsoluteUri("/api/Usuario/DescargarReporteUsuarios").ToString();
        await JS.InvokeVoidAsync("open", url, "_blank");
    }

    [Inject] NavigationManager Navigation { get; set; }
    [Inject] IJSRuntime JS { get; set; }
}